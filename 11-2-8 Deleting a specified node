#include <stdio.h>
#include <stdlib.h>

struct ListNode {
    int data;
    struct ListNode *next;
};

struct ListNode *readlist();
struct ListNode *deletem( struct ListNode *L, int m );
void printlist( struct ListNode *L )
{
     struct ListNode *p = L;
     while (p) {
           printf("%d ", p->data);
           p = p->next;
     }
     printf("\n");
}

int main()
{
    int m;
    struct ListNode *L = readlist();
    scanf("%d", &m);
    L = deletem(L, m);
    printlist(L);

    return 0;
}


struct ListNode *readlist(){
	struct ListNode *head, *tail;
	head = tail = NULL;
	int num;
	do{
		scanf("%d", &num);
		if(num == -1) break;
		else {
			struct ListNode *node = (struct ListNode *)malloc(sizeof(struct ListNode));
			node->data = num;
			node->next = NULL;
			
			if(!head) head = node;
			else tail->next = node;
			tail = node;
		}
		
	}while(1);
	
	return head;
	
}


struct ListNode *deletem( struct ListNode *L, int m ){
	struct ListNode *this_node = L, *head, *next_node;
	
	while(this_node && this_node->data == m){
		this_node = this_node->next;
	}
	
	head = this_node;
	
	if(head){
		next_node = this_node->next;
		while(next_node){
			if(next_node->data == m) {
				next_node = next_node->next;
			
			}
			else {
				this_node->next = next_node;
				this_node = next_node;
				next_node = next_node->next;	
			} 
			
		}
		//printf("%d\n", this_node->data);
		this_node->next = next_node;
		
	}
	
	return head;
	
}
